name: omniedge build

on:
  workflow_dispatch:
  schedule:
    - cron: 0 */24 * * *
jobs:
  build-binary:
    name: Docker cross build
    env:
      ENVIRONMENT: prod
    strategy:
      matrix:
        platform: [386,amd64,arm,arm64,ppc64le,s390x ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with tag
        uses: actions/checkout@master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: omniedge-saas-cli-${{ matrix.platform }}
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ matrix.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ matrix.os }}-build-${{ env.cache-name }}

      - name: dockerx platform
        run: |
          case ${{ matrix.platform }} in
            amd64)
            echo "DOCKER_PLATFORM=linux/amd64" >> $GITHUB_ENV
            ;;
            386)
            echo "DOCKER_PLATFORM=linux/i386" >> $GITHUB_ENV
            ;;
            arm64)
            echo "DOCKER_PLATFORM=linux/arm64" >> $GITHUB_ENV
            ;;
            arm)
            echo "DOCKER_PLATFORM=linux/arm/v7" >> $GITHUB_ENV
            ;;
            ppc64le)
            echo "DOCKER_PLATFORM=linux/ppc64le" >> $GITHUB_ENV
            ;;
            s390x)
            echo "DOCKER_PLATFORM=linux/s390x" >> $GITHUB_ENV
            ;;
          esac

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{ env.DOCKER_PLATFORM }}
          push: false
          load: true
          file: docker/Dockerfile-ubuntu-${{ matrix.platform }}
          build-args: |
            BUILD_ENV=${{ env.ENVIRONMENT }}
          tags: cli:0.1
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: run binfmt
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install all

      - name: run cli
        run: |
          docker run --name omniedge -t -d cli:0.1
      - name: copy file
        run: |
          docker cp omniedge:/app/out/omniedge .
      - name: zip
        run: |
          zip -j ./omniedge-${{ github.ref_name }}-${{ matrix.platform }}.zip ./omniedge

      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          path: omniedge-${{ github.ref_name }}-${{ matrix.platform }}.zip
          name: omniedge-${{ github.ref_name }}-${{ matrix.platform }}.zip
          if-no-files-found: error
          
      - name: Upload package to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          overwrite: true
          file: omniedge-${{ github.ref_name }}-${{ matrix.platform }}.zip
          tag: ${{ github.ref }}
  build-freebsd-binary:
    runs-on: macos-12
    env:
      ENVIRONMENT: prod
    name: Build on FreeBSD
    steps:
      - name: Checkout with tag
        uses: actions/checkout@master
        
      - uses: actions/checkout@v2
      - name: prepare
        id: test
        uses: vmactions/freebsd-vm@v0.1.8
        with:
          usesh: true
          run: |
            pkg update
            free -h
            pkg install -y bash go gmake git openssl zip autoconf automake libtool
            chsh -s bash
            make generate
            BUILD_ENV=${{ env.ENVIRONMENT }} make build-freebsd
            zip -j ./omniedge-${{ github.ref_name }}-freebsd-13.1.zip ./out/omniedge
      
      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          path: omniedge-${{ github.ref_name }}-freebsd-13.1.zip
          name: omniedge-${{ github.ref_name }}-freebsd-13.1.zip
          if-no-files-found: error
          
      - name: Upload package to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          overwrite: true
          file: omniedge-${{ github.ref_name }}-freebsd-13.1.zip
          tag: ${{ github.ref }}
  
