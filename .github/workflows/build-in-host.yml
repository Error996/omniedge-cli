name: omniedge build in host machine

env:
  APP_NAME: 'omniedgecli'
  MAINTAINER: 'OmniEdge.io'
  DESC: 'Bring intranet on the internet'

on:
  push:
    branches:
      - dev
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      env:
        description: env of the action
        default: prod
        required: false
      tag:
        description: tag ( if tag is not empty, env is always prod)
        required: false

jobs:
  build:
    name: Build on ${{ matrix.os }}
    env:
      ENVIRONMENT: ${{ github.event.inputs.env || 'dev' }}
      TAG: ${{ github.event.inputs.tag }}
    strategy:
      matrix:
        os: [ ubuntu-18.04,ubuntu-20.04,macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: setup env to prod if tag is not empty
        if: ${{ env.TAG }}
        run: |
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV

      - name: Checkout without tag
        if: ${{ !env.TAG }}
        uses: actions/checkout@master

      - name: Checkout with tag
        uses: actions/checkout@master
        if: ${{ env.TAG }}
        with:
          ref: ${{ env.TAG }}

      - name: Show CPU Model and Free Space
        if: ${{ !matrix.os == 'macos-latest' }}
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h

      - name: Show system info
        run: |
          echo -e "system info: $(uname -a)"

      - name: setup golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.6'

      - name: go mod download
        run: |
          go mod download

      - name: make
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo -E apt-get -y update
          sudo -E apt-get install -y openssl
          sudo -E apt-get install -y build-essential
          sudo -E apt-get install -y libssl-dev
          sudo -E apt-get install -y zip
          make generate
          BUILD_ENV=${{ env.ENVIRONMENT }} make build
          zip -j ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip ./out/omniedge
          sha256sum ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip > ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip.sha256
          cat ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip.sha256
          mkdir -p ./.debpkg/usr/bin
          mkdir -p ./.rpmpkg/usr/bin
          cp -p ./out/omniedge ./.debpkg/usr/bin/
          cp -p ./out/omniedge ./.rpmpkg/usr/bin/
          
      - uses: jiro4989/build-deb-action@v2
        if: startsWith(matrix.os, 'ubuntu')
        with:
          package: ${{ env.APP_NAME }}-${{ matrix.os }}
          package_root: .debpkg
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ github.ref }}
          arch: 'amd64'
          desc: '${{ env.DESC }}'

      - uses: jiro4989/build-rpm-action@v2
        if: startsWith(matrix.os, 'ubuntu')
        with:
          summary: '${{ env.DESC }}'
          package: ${{ env.APP_NAME }}
          package_root: .rpmpkg
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ github.ref }}
          arch: 'x86_64'
          desc: '${{ env.DESC }}'
              
      - name: make
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install autoconf automake libtool coreutils
          make generate
          BUILD_ENV=${{ env.ENVIRONMENT }} make build-darwin
          zip -j ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip ./out/omniedge
          sha256sum ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip > ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip.sha256
          cat ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip.sha256

      - uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'ubuntu')
        with:
          name: artifact-package
          path: |
            ./*.deb
            ./*.rpm
            !./*-debuginfo-*.rpm

      - uses: actions/upload-artifact@v3
        with:
          name: binary
          path: |
            ./out/omniedge
            ./omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip.sha256

      - uses: softprops/action-gh-release@v1
        if: ${{ env.TAG }}
        with:
          token: ${{ secrets.GIT_HUB_TOKEN}}
          files: |
            omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip
            omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip.sha256
            *.deb
            *.rpm
          tag_name: ${{ env.TAG }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: OmniEdgecli-${{ github.ref }} 

      - name: Upload zip 
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip
          asset_name: ${{ env.APP_NAME }}-${{ github.ref_name }}-${{ matrix.os }}
          asset_content_type: application/zip
          
      - name: Upload sha
        id: upload_release_sha
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: omniedgecli-${{ github.ref_name }}-${{ matrix.os }}.zip.sha256
          asset_name: ${{ env.APP_NAME }}-${{ github.ref_name }}-${{ matrix.os }}.sha256
          asset_content_type: application/txt
          
      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: OmniEdgecli-${{ github.ref }} 
          body: "TODO: Fill this changelog. Sorry for the inconvenience!"
          draft: ${{ github.event.inputs.is-draft }}
          prerelease: ${{ github.event.inputs.is-pre-release }}
          files: |
            ./*.sha256
            ./*.deb
            ./*.rpm
            ./*.zip
