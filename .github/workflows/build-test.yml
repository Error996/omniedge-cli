name: omniedge armv7 build

on:
  push:
    branches:
      - feature-build

jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Show CPU Model and Free Space
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
      - name: Show system info
        run: |
          echo -e "system info: $(uname -a)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: omniedge-saas-cli-armv7
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ matrix.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ matrix.os }}-build-${{ env.cache-name }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm/v7
          push: false
          load: true
          file: docker/Dockerfile-ubuntu-armv7
          tags: cli:0.1
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: run binfmt
        run: |
          docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64

      - name: run cli
        run: |
          docker run --name omniedge -t -d cli:0.1
      - name: copy file
        run: |
          docker cp omniedge:/app/out/omniedge .
      - name: zip
        run: |
          zip -j ./omniedgecli-armv7.zip ./omniedge